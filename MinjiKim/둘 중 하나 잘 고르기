import java.io.*;
import java.util.*;
import java.math.*;


public class Main {
    public static void main(String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());

        StringTokenizer st;


        int[] a = new int[n*2+1];
        int[] b = new int[n*2+1];

        for(int i = 1;i<=2*n;i++){
            st = new StringTokenizer(br.readLine());
            a[i] = Integer.parseInt(st.nextToken());
            b[i] = Integer.parseInt(st.nextToken());
        }

        int[][] dp = new int[2*n+1][n+1];
        dp[0][0] = 0;


        for(int i = 1;i<=2*n;i++){
            for(int j = 0;j<=n;j++){
                if(j == 0) dp[i][j] = dp[i-1][j] + b[i]; // 빨간색을 0번 사용하는 경우
                else if(j == i) dp[i][j] = dp[i-1][j-1] + a[i]; //현재 탐색하는 카드 수보다 i가 더 많을 때
                else dp[i][j] = Math.max(dp[i-1][j-1] + a[i], dp[i-1][j] + b[i]);
            }
        }

        System.out.println(dp[2*n][n]);

    }
}
